<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven />

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:default-servlet-handler />

	<!-- 3.定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/html/"></property>
		<property name="suffix" value=".html"></property>
	</bean>
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property><!-- 最大上传文件大小 -->
		<property name="maxInMemorySize" value="10960"></property>
	</bean>
	<!-- 在spring-mvc.xml文件中加入这段配置后，spring返回给页面的都是utf-8编码了 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="com.swust.emporium.web" />

	<!-- 5.权限拦截器 -->
	<mvc:interceptors>

		<!--校验是否登陆主页的拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/frontend/**"/>
			<mvc:exclude-mapping path="/frontend/getoperationlogin" />
			<mvc:exclude-mapping path="/frontend/login"/>
			<bean id="FrontendLoginInterceptor" class="com.swust.emporium.interceptor.frontend.FrontendLoginInterceptor"/>
		</mvc:interceptor>

		<!--校验是否登陆的拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/shopadmin/**" />
			<bean id="ShopInterceptor" class="com.swust.emporium.interceptor.shopadmin.ShopLoginInterceptor" />
		</mvc:interceptor>

		<!--校验是否对该店铺具有操作权限的拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/shopadmin/**" />
			<!--排除以下方法 不需要拦截器进行拦截-->
			<!-- shoplist page -->
			<mvc:exclude-mapping path="/shopadmin/shoplist" />
			<!--该方法ShopManagementController给session中的shop和shopList赋值-->
			<mvc:exclude-mapping path="/shopadmin/getshoplist" />
			<!-- shopregister page -->
			<mvc:exclude-mapping path="/shopadmin/getshopinitinfo" />
			<mvc:exclude-mapping path="/shopadmin/registershop" />
			<mvc:exclude-mapping path="/shopadmin/shopoperation" />
			<!-- shopmanage page -->
			<mvc:exclude-mapping path="/shopadmin/shopmanagement" />
			<mvc:exclude-mapping path="/shopadmin/getshopmanagementinfo" />
			<bean id="ShopPermissionInterceptor"
				class="com.swust.emporium.interceptor.shopadmin.ShopPermissionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

</beans>