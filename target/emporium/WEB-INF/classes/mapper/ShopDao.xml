<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swust.emporium.dao.ShopDao">
	<!--
		useGeneratedKeys 代表插入结束后是否自动获取数据表的自增主键值
		keyColumn 代表数据表的主键是哪个属性
		keyProperty 代表数据表的主键与实体类中哪个属性相对应
	-->
	<insert id="insertSHop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
		insert into
		tb_shop(owner_id, area_id,shop_category_id, shop_name, shop_desc, shop_addr, phone,
		shop_img, priority, create_time, last_edit_time, enable_status, advice)
		values(
		#{owner.userId},
		#{area.areaId},
		#{shopCategory.shopCategoryId},
		#{shopName},
		#{shopDesc},
		#{shopAddr},
		#{phone},
		#{shopImg},
		#{priority},
		#{createTime},
		#{lastEditTime},
		#{enableStatus},
		#{advice}
		)
	</insert>

	<update id="updateShop" parameterType="com.swust.emporium.pojo.Shop">
		<!--
		动态SQL生成
		实体类字段不为空 则更新数据库字段 注意逗号
		<if test="xxx != null"> xxx_xxx = #{xxx}> </if>
		-->
		update tb_shop
		<set>
			<if test="shopName != null"> shop_name = #{shopName},</if>
			<if test="shopDesc != null"> shop_desc = #{shopDesc},</if>
			<if test="shopAddr != null"> shop_addr = #{shopAddr},</if>
			<if test="phone != null"> phone = #{phone},</if>
			<if test="shopImg != null"> shop_img = #{shopImg},</if>
			<if test="priority != null"> priority = #{priority},</if>
			<if test="lastEditTime != null"> last_edit_time = #{lastEditTime},</if>
			<if test="enableStatus != null"> enable_status = #{enableStatus},</if>
			<if test="advice != null"> advice = #{advice},</if>

			<!--复合类型-->
			<if test="shopCategory != null"> shop_category_id = #{shopCategory.shopCategoryId},</if>
			<if test="area != null"> area_id = #{area.areaId}</if>
		</set>
		where shop_id = #{shopId}
	</update>

	<!--定义queryByShopId查询方法的返回值类型-->
	<resultMap type="com.swust.emporium.pojo.Shop" id ="shopMap">
		<!--定义主键Id 有且仅有一个-->
		<id column="shop_id" property="shopId"></id>
		<!--定义基本数据类型-->
		<result column="shop_name" property="shopName"></result>
		<result column="shop_desc" property="shopDesc"></result>
		<result column="shop_addr" property="shopAddr"></result>
		<result column="phone" property="phone"></result>
		<result column="shop_img" property="shopImg"></result>
		<result column="priority" property="priority"></result>
		<result column="create_time" property="createTime"></result>
		<result column="last_edit_time" property="lastEditTime"></result>
		<result column="enable_status" property="enableStatus"></result>
		<result column="advice" property="advice"></result>
		<!--定义复合数据类型-->
		<association property="area" column="area_id" javaType="com.swust.emporium.pojo.Area">
			<id column="area_id" property="areaId"></id>
			<result column="area_name" property="areaName"></result>
		</association>
		<association property="owner" column="owner" javaType="com.swust.emporium.pojo.PersonInfo">
			<id column="user_id" property="userId"></id>
			<result column="name" property="name"></result>
		</association>
		<association property="shopCategory" column="shop_category_id" javaType="com.swust.emporium.pojo.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId"></id>
			<result column="shop_category_name" property="shopCategoryName"></result>
		</association>
	</resultMap>
	<select id="queryByShopId" resultMap="shopMap" parameterType="Long">
		select
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		where
		s.area_id = a.area_id
		and
		s.shop_category_id = sc.shop_category_id
		and
		s.shop_id = #{shopId}
	</select>

	<!--分页查询功能-->

	<select id="queryShopList" resultMap="shopMap">
		select
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<!--实现条件查询功能-->
		<where>
			<!--实现店铺类别条件查询功能-->
			<if test="shopCondition.shopCategory != null
			 and
			 shopCondition.shopCategory.shopCategoryId != null ">
				and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
			</if>
			<!--实现区域信息条件查询功能-->
			<if test="shopCondition.area != null
			and
			shopCondition.area.areaId != null">
				and s.area_id = #{shopCondition.area.areaId}
			</if>

			<!---->
			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.parent != null and
			shopCondition.shopCategory.parent.shopCategoryId != null">
				and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
			</if>

			<!--%%%%%实现店铺名称模糊功能%%%%%-->
			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>
			<!--实现状态信息条件查询功能-->
			<if test="shopCondition.enableStatus">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>
			<if test="shopCondition.owner != null
			and
			shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>
			<!--通过Id连接三张表-->
			and 
			s.area_id = a.area_id
			and
			s.shop_category_id = sc.shop_category_id
		</where>
		<!--按照优先级降序排列-->
		order by
		s.priority
		desc
		<!--实现分页功能-->
		limit #{rowIndex},#{pageSize};
	</select>
	<!--获取分页查询功能所查询出来的数据总数-->
	<select id="queryShopCount" resultType="int">
		select
		count(1)
		from
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<!--实现条件查询功能-->
		<where>
			<!--实现店铺类别条件查询功能-->
			<if test="shopCondition.shopCategory != null
			 and
			 shopCondition.shopCategory.shopCategoryId != null ">
				and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
			</if>
			<!--实现区域信息条件查询功能-->
			<if test="shopCondition.area != null
			and
			shopCondition.area.areaId != null">
				and s.area_id = #{shopCondition.area.areaId}
			</if>

			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.parent != null and
			shopCondition.shopCategory.parent.shopCategoryId != null">
				and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
			</if>

			<!--%%%%%实现店铺名称模糊功能%%%%%-->
			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>
			<!--实现状态信息条件查询功能-->
			<if test="shopCondition.enableStatus">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>
			<if test="shopCondition.owner != null
			and
			shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>
			<!--通过Id连接三张表-->
			and
			s.area_id = a.area_id
			and
			s.shop_category_id = sc.shop_category_id
		</where>
	</select>
</mapper>